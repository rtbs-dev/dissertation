# Generative Random Spanning Forests

Addressing gaps discussed in the previous section to reach a generative  model for network recovery requires careful attention to the generation mechanism for node activations.
While there are many ways we might imagine bipartite data to be be generated, presuming the existence of a dependency graph that _causes_ activation patterns will give us useful ways to narrow down the generative specification.
The dependency graph gives us all of the ways that nodes' state can affect the state of others, i.e. the neighbor set of each node.
This immediately leads us to model our node activations as resulting from _spreading_, or, _diffusive processes_.


In this chapter we outline how the random-walks are is related to these diffusive  models of graph traversal, enabled by an investigation of the graph's "regularized laplacian" from @Semisupervisedlearning_Avrachenkov2017.
Then we use the implicit causal dependency tree structure of each observation, together with the Matrix Tree Theorem [@MatrixForestTheorem_Chebotarev2006,@Countingrootedforests_Knill2013] to more generally define our generative node activation model: namely, as samples from the space of rooted random spanning forests on the dependency graph.

 

## Node Activation by Diffusive Processes 

The class of diffusive processes we focus on "spread" from one node to another.
If a node is activated, it is able to activate other nodes it is connected to, directly encoding our need for the graph edges to represent that nodes "depend" on others to be activated.
In this case, a node activates when another node it depends on spreads their state to it.
These single-cause activations are equivalent to imagining a random-walk on the dependency graph, where visiting a node activates it.


### Random Walk Activations 
Random walks are regularly employed to model spreading and diffusive processes on networks.
If a network consists of locations, states, agents, etc. as "nodes", and relationships between nodes as "edges", then random walks consist of a stochastic process that "visits" nodes by randomly "walking" between them along connecting edges.
Epidemiological models, cognitive search in semantic networks, stock price influences, website traffic routing, social and information cascades, and many other domains also involving complex systems, have used the statistical framework of random walks to describe, alter, and predict their behaviors. [CITE...lots?]

When network structure is known, the dynamics of random-walks are used to capture the network structure via sampling [LITTLEBALLOFFUR, etc], estimate node importance's[PAGERANK], or predict phase-changes in node states (e.g. infected vs. uninfected)[SIR I think]
In our case, Since we have been encoding the activations as binary activation vectors, the "jump" information is lost---activations are "emitted" for observation only upon the random walker's initial visit. [CITE INVITE]
In many cases, however, the existence of relationships is not known already, and analysts might *assume* their data was generated by random-walk-like processes, and want to use that knowledge to estimate the underlying structure of the relationships between nodes.


- useful tool for analysis of our data: reg laplacian
- interpretations 


### Dependencies as Trees
The whole graph isn't a tree....Every data point is.

[GRAPHIC 1 - my data]

[GRAPHIC 2 - infection vector from meta node]


### Matrix Tree and Forest Theorems 

- one from kirchoff
- one from Chebotarv

## Generative Model Specification

![Explanation of the Random Spanning Forest generative model for binary activation observations](../images/random-spanning-forests.png)
- hierarchical model
- marginalize over the root node. 

