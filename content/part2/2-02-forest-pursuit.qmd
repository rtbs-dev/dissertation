# Forest Pursuit: Approximate Recovery in Near-linear Time 

> filling the gap we saw in the literature


## Random Walks as Spanning Forests 

The class of diffusive processes we focus on "spread" from one node to another.
If a node is activated, it is able to activate other nodes it is connected to, directly encoding our need for the graph edges to represent that nodes "depend" on others to be activated.
In this case, a node activates when another node it depends on spreads their state to it.
These single-cause activations are equivalent to imagining a random-walk on the dependency graph, where visiting a node activates it.

### Random Walk Activations 
Random walks are regularly employed to model spreading and diffusive processes on networks.
If a network consists of locations, states, agents, etc. as "nodes", and relationships between nodes as "edges", then random walks consist of a stochastic process that "visits" nodes by randomly "walking" between them along connecting edges.
Epidemiological models, cognitive search in semantic networks, stock price influences, website traffic routing, social and information cascades, and many other domains also involving complex systems, have used the statistical framework of random walks to describe, alter, and predict their behaviors. [CITE...lots?]

When network structure is known, the dynamics of random-walks are used to capture the network structure via sampling [LITTLEBALLOFFUR, etc], estimate node importance's[PAGERANK], or predict phase-changes in node states (e.g. infected vs. uninfected)[SIR I think].
In our case, Since we have been encoding the activations as binary activation vectors, the "jump" information is lost---activations are "emitted" for observation only upon the random walker's initial visit. [CITE INVITE]
In many cases, however, the existence of relationships is not known already, and analysts might *assume* their data was generated by random-walk-like processes, and want to use that knowledge to estimate the underlying structure of the relationships between nodes.


- useful tool for analysis of our data: reg laplacian
- interpretations 

### Dependencies as Trees
The whole graph isn't a tree....Every data point is.


{{< embed ../codefigs/graphs.qmd#fig-stack-tree >}}


[GRAPHIC 1 - my data]

[GRAPHIC 2 - infection vector from meta node]




### Matrix Tree and Forest Theorems 

- one from kirchoff
- one from Chebotarv



## Sparse Dictionary Learning

### Problem Specification

### Matching Pursuit

### Space of Spanning Forests

## Forest Pursuit: Approximate Recovery in Near-linear Time {#sec-FP}

I.e. the PLOS paper (modified basis-pursuit via MSTs)
### Algorithm Summary

### Uncertainty Estimation 

### Approximate Complexity

## Simulation Study {#sec-FP-experiments}

### Method

### Results - Scoring

{{< embed ../codefigs/results.qmd#fig-fp-overall >}}

{{< embed ../codefigs/results.qmd#fig-fp-compare >}}

{{< embed ../codefigs/results.qmd#fig-partials-mcc >}}

### Results - Performance

{{< embed ../codefigs/results.qmd#fig-runtime >}}

{{< embed ../codefigs/results.qmd#fig-partials-runtime >}}
## Discussion


### Interaction Probability

![](../images/PR.svg)
